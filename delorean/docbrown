#!/usr/bin/env python

# Copyright(C) 2007 INL
# Written by Victor Stinner <victor.stinner AT inl.fr>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

from socket import socket, AF_INET, SOCK_STREAM, SO_REUSEADDR, \
    error as socket_error, timeout
from macfly.common import PORT, DOCBROWN_HELLO
from sys import argv, exit, stderr

COMMAND_MAXLEN = 200

class Docbrown:
    def __init__(self, host):
        self.hostname = host
        self.socket = socket(AF_INET, SOCK_STREAM)

    def run(self, command):
        print "Connect to deloreand (%s:%s)" % (self.hostname, PORT)
        try:
            self.socket.connect((self.hostname, PORT))
        except socket_error, err:
            if err[0] == 111:
                print "Host %r seems down" % self.hostname
                exit(1)
            raise
        self.socket.send(DOCBROWN_HELLO)
        print "Send command: %s" % command
        self.socket.send(command)
        self.socket.settimeout(1.0)
        try:
            answer = self.socket.recv(40)
        except timeout:
            answer = ''
        self.socket.close()
        if answer:
            print "Result: %s" % answer
        else:
            print "Error: timeout!"

def usage():
    print >>stderr, "usage: %s hostname command" % argv[0]
    exit(1)

def main():
    # Read hostname
    if len(argv) < 3:
        usage()
    host = argv[1]

    # Read command
    command = ' '.join(argv[2:]).strip()
    if len(command) > COMMAND_MAXLEN:
        print >>stderr, "Error: command is too long"
        exit(1)
    if not command:
        usage()

    # Connect and send command
    docbrown = Docbrown(host)
    try:
        docbrown.run(command)
    except KeyboardInterrupt:
        print "Interrupted (CTRL+C)."

if __name__ == "__main__":
    main()

